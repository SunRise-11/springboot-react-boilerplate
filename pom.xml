<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.pugnascotia.reactdemo</groupId>
	<artifactId>spring-react-boilerplate</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>spring-react-boilerplate</name>
	<description>Spring React Boilerplate project</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.8</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Use standard @Inject annotation instead of @Autowire -->

		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>

	</dependencies>

	<build>
		<defaultGoal>clean spring-boot:run</defaultGoal>
		<plugins>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!-- http://docs.spring.io/spring-boot/docs/current/maven-plugin/usage.html#Running_the_application -->
				<configuration>
					<addResources>true</addResources>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>exec-maven-plugin</artifactId>
				<groupId>org.codehaus.mojo</groupId>
				<executions>
					<execution>
						<id>Test bundle with Nashorn</id>
						<!-- Ensure that Nashorn can load the bundle without errors. 'test' would arguably be a -->
						<!-- more appropriate phase, but that doesn't get run with the default target. -->
						<phase>test-compile</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>jjs</executable>
							<commandlineArgs>${project.basedir}/src/test/js/test_bundle.js</commandlineArgs>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.2</version>

				<configuration>
					<installDirectory>.mvn</installDirectory>
					<nodeVersion>v8.4.0</nodeVersion>
					<yarnVersion>v0.27.5</yarnVersion>
				</configuration>

				<executions>
					<execution>
						<id>Install Node and yarn</id>
						<goals>
							<goal>install-node-and-yarn</goal>
						</goals>
					</execution>
					<execution>
						<id>yarn install</id>
						<goals>
							<goal>yarn</goal>
						</goals>
					</execution>
					<execution>
						<id>Run webpack</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>yarn</goal>
						</goals>
						<configuration>
							<arguments>run build</arguments>
						</configuration>
					</execution>
					<execution>
						<id>Compile renderer</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>yarn</goal>
						</goals>
						<configuration>
							<arguments>run compile-renderer</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>src/main/resources/static/js</directory>
							<includes>
								<include>bundle.js*</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>
